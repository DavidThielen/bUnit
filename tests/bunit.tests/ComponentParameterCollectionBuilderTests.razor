@inherits Bunit.TestContext
@code {
    [Fact(DisplayName = "Bind method should behave like bind-directive")]
    public void Test400()
    {
        // arrange
        var initialValue = "Hello";

        // act
        var bindMethod = Render<FullBind>(ps => ps
            .Bind(
                p => p.Foo,
                initialValue,
                p => initialValue = p,
                () => initialValue));
        var bindDirective = Render<FullBind>(@<FullBind @bind-Foo="initialValue" />);

        // assert
	    FullBind bindInstance = default!;
	    FullBind bindDirectiveInstance = default!;
	    bindMethod.AccessInstance(c => bindInstance = c);
	    bindDirective.AccessInstance(c => bindDirectiveInstance = c);
	    
	    bindInstance.Foo.ShouldBe(bindDirectiveInstance.Foo);

        bindMethod.AccessInstance(c => c.FooChanged.InvokeAsync(nameof(bindMethod)));
        initialValue.ShouldBe(nameof(bindMethod));

        bindDirective.AccessInstance(c => c.FooChanged.InvokeAsync(nameof(bindDirective)));
        initialValue.ShouldBe(nameof(bindDirective));

	    bindInstance.FooExpression.ToString()
            .ShouldBe(bindDirectiveInstance.FooExpression.ToString());
    }
}
